# Adapted from 
# https://github.com/jamestomasino/dotfiles/blob/master/git/.gitconfig
# More tips here: http://www.kernel.org/pub/software/scm/git/docs/git-config.html
# http://git-scm.com/docs/git-log
[user]
    name = Chris Penner
    email = christopher.penner@gmail.com

[credential]
    helper = osxkeychain

[init]
    templatedir = '~/.git_template'

[core]
    whitespace = trailing-space, space-before-tab
    excludesfile = ~/.gitignore_global
    editor = 'vim'

[branch]
    autosetupmerge = true

[color]
    diff = auto
    status = auto
    branch = auto
    interactive = auto
    ui = auto

[diff]
    mnemonicprefix = true
    suppressBlankEmpty = true
    tool = vimdiff

[merge]
    stat = true
    tool = fugitive
    # tool = vimdiff

[mergetool "fugitive"]
    cmd = vim -f -c "Gdiff" "$MERGED"

[mergetool "vimdiff3"]
    cmd = vim -f -d -c \"wincmd J\" \"$MERGED\" \"$LOCAL\" \"$BASE\" \"$REMOTE\"

[mergetool]
    prompt = false
    keepBackup = false

[push]
    default = current

[advice]
    statusHints = true

[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green

[color "diff"]
    meta = yellow bold
    frag = magenta
    plain = white bold
    old = red bold
    new = green bold
    commit = yellow bold
    func = green dim

[color "status"]
    added = yellow
    changed = green
    untracked = cyan

[alias]
    # rollback
    # rollback = "!git reset $1; git reset --soft HEAD@{1}; git commit -m 'reverting to older revision $1'; git reset --hard; echo"

    dh = diff HEAD

    l = log --pretty=format:'%Cblue%h%Creset %Cgreen%<(15)%ad%Creset | %s%d [%C(yellow)%an%Creset] %C(cyan)%d%Creset' --date=relative

    # shortcuts
    # m = checkout master

    # remove from repo but not filesystem
    # removefromrepo = rm --cached

    # remove all remote branches that have been merged
    # removeallmerged = "!git branch --merged | grep -v \"\\*\" | xargs -n 1 git branch -d"

    # not a fan of random merges
    pull = pull --ff-only

    # local exclude
    exclude = "!sh -c 'echo "$1" >> .git/info/exclude' -"

    # What has changed since...
    changelist = "!git whatchanged --since='$1' --oneline | awk '/^:/ {print $6}' | sort -u; #"

    # because I always typo git commit --ammend, er, amend
    amend = commit --amend
    ammend = amend

    # various pretty loggers from various places
    lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative
    lc = log ORIG_HEAD.. --stat --no-merges
    # from http://blog.kfish.org/2010/04/git-lola.html
    lol = log --graph --decorate --pretty=oneline --abbrev-commit
    lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
    ll = log --graph --date=short

    # commits not pushed to $1
    unpushed = cherry -v

    # log everything with $1 string in the diff
    timegrep = log -S

    # like above, but show the diff
    diffgrep = log -p -S

    # search logs for a bugzilla like number
    # findbug = "!sh -c 'git log --grep ^$1:' -"

    # from https://gist.github.com/492227
    # lost = "!git fsck | awk '/dangling commit/ {print $3}' | git show --format='SHA1: %C(yellow)%h%Creset %f' --stdin | awk '/SHA1/ {sub(\"SHA1: \", \"\"); print}'"

    # show a list of every branch and show their latests commit, sorted by last commit
    # brlog = "!sh -c 'for C in $(git for-each-ref --sort=committerdate refs/heads --format=\"%(refname:short)\") ; do git show  -s --pretty=format:\"%Cgreen%ci %Cblue%cr%Creset  $C\" \"$C\" -- ; git show --stat -s $C ; echo; done'"

    # remove a file from index
    unadd = !git reset HEAD

    # url of origin, about 99% of what I use git config --list for
    cloneurl = config --get remote.origin.url

    # from https://github.com/cypher/dotfiles/blob/master/gitconfig
    ls-ignored = ls-files --exclude-standard --ignored --others

    # ignore local changes to a  file
    # ignore = update-index --assume-unchanged
