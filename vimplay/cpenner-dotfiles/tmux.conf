# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# use 256 term for pretty colors
set -g default-terminal "screen-256color"
# set -g default-terminal "xterm"

# increase scroll-back history
set -g history-limit 5000

# Autorename sanely.
setw -g automatic-rename on

# use vim key bindings
setw -g mode-keys vi

# pane movement
bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"

bind-key a select-window -t :1
bind-key s select-window -t :2
bind-key d select-window -t :3
bind-key f select-window -t :4

bind-key Escape detach-client

# decrease command delay (increases vim responsiveness)
# set -sg escape-time 0
set -g escape-time 10

# increase repeat time for repeatable commands
set -g repeat-time 1000

# start window index at 1
set -g base-index 2

# start pane index at 1
setw -g pane-base-index 1

# highlight window when it has new activity
setw -g monitor-activity on
set -g visual-activity on

# re-number windows when one is closed
set -g renumber-windows on

# Start numbering at 1
set -g base-index 1
# enable pbcopy and pbpaste
# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard/blob/master/README.md
#set-option -g default-command "reattach-to-user-namespace -l zsh"

# Copy-mode
bind -t vi-copy v begin-selection     # Begin selection in copy mode.
bind -t vi-copy C-v rectangle-toggle  # Begin selection in copy mode.
bind -t vi-copy y copy-selection      # Yank selection in copy mode.

bind b list-buffers  # list paster buffers
bind B delete-buffer # delete last buffer
# bind p paste-buffer  # paste from the top paste buffer
bind C-p paste-buffer  # paste from the top paste buffer
bind P choose-buffer # choose which buffer to paste from
bind C-P choose-buffer # choose which buffer to paste from


###########################
#  Key Bindings
###########################

# tmux prefix
unbind C-b
set -g prefix C-Space
bind Space send-prefix

bind Space resize-pane -Z
bind C-Space resize-pane -Z

bind enter copy-mode
bind C-enter copy-mode

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# paste
unbind C-p
bind C-p paste-buffer

# New window with default path set to last path
bind j split-window -v -c "#{pane_current_path}"
bind C-j split-window -v -c "#{pane_current_path}"
bind l split-window -h -c "#{pane_current_path}"
bind C-l split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

bind-key 1 select-layout even-horizontal
bind-key 2 select-layout even-vertical
bind-key 3 select-layout main-horizontal
bind-key 4 select-layout main-vertical
bind-key 5 select-layout tiled

unbind q
bind q kill-pane
bind p previous-window 

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# enable mouse control by default - change 'off' to 'on' to enable by default.
# setw -g mode-mouse on
# set -g mouse-resize-pane on
# set -g mouse-select-pane on
# set -g mouse-select-window on

set -g mouse-utf8 on
set -g mouse on
bind -n WheelUpPane   select-pane -t= \; copy-mode -e \; send-keys -M
bind -n WheelDownPane select-pane -t= \;                 send-keys -M

# toggle mouse mode to allow mouse copy/paste
# set mouse on with prefix M
bind M \
    set -g mode-mouse on \;\
    set -g mouse-resize-pane on \;\
    set -g mouse-select-pane on \;\
    set -g mouse-select-window on \;\
    display 'Mouse: ON'
# set mouse off with prefix M
bind m \
    set -g mode-mouse off \;\
    set -g mouse-resize-pane off \;\
    set -g mouse-select-pane off \;\
    set -g mouse-select-window off \;\
    display 'Mouse: OFF'

###########################
# Status Bar
###########################
set-option -g status on

# enable UTF-8 support in status bar
set-option -g status-utf8 on

# set refresh interval for status bar
set-option -g status-interval 2

# center the status bar
set-option -g status-justify "centre"

# show session, window, pane in left status bar
set-option -g status-left-length 60
set-option -g status-right-length 90

set-option -g status-left "#(~/dev/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/dev/tmux-powerline/powerline.sh right)"

# set -g status-left '#[fg=green]#S#[fg=blue] #I:#P#[default]'
# set -g status-right '%H:%M:%S %d-%b-%y'
# show hostname, date, time, and battery in right status bar
# set-option -g status-right '#[fg=green]#H#[default] %m/%d/%y %I:%M#[fg=red]#(battery discharging)#[default]#(battery charging)'

###########################
# Colors
###########################

# color status bar
set -g status-bg colour235
set -g status-fg white

# highlight current window
set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-bg green

# set color of active pane
set -g pane-border-fg colour235
set -g pane-border-bg black
set -g pane-active-border-fg green
set -g pane-active-border-bg black
